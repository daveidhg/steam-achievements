services:
  subscription-service:
    build:
      context: ./subscription-service
    container_name: subscription-service
    ports:
      - "5000:5000"
    env_file:
      - ./subscription-service/.env
    depends_on:
      subscription-db:
        condition: service_healthy

  subscription-db:
    image: postgres:16.9
    container_name: subscription-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: subscription-db
    volumes:
      - subscription-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d subscription-db"]
      interval: 5s
      timeout: 5s
      retries: 5

  polling-service:
    build:
      context: ./polling-service
    container_name: polling-service
    ports:
      - "5001:5001"
    env_file:
      - ./polling-service/.env
    depends_on:
      polling-queue-db:
        condition: service_healthy

  polling-queue-db:
    image: postgres:16.9
    container_name: polling-queue-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: polling-queue-db
    volumes:
      - polling-queue-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d polling-queue-db"]
      interval: 5s
      timeout: 5s
      retries: 5

  receiver-service:
    build:
      context: ./receiver-service
    container_name: receiver-service
    ports:
      - "5002:5002"
    env_file:
      - ./receiver-service/.env
    depends_on:
      receiver-db:
        condition: service_healthy

  receiver-db:
    image: postgres:16.9
    container_name: receiver-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: receiver-db
    volumes:
      - receiver-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d receiver-db"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  subscription-db-data:
  polling-queue-db-data:
  receiver-db-data: